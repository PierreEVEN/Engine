# This is a basic workflow to help you get started with Actions

name: CI-Windows

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  vulkan_sdk: C:/VulkanSDK/1.1.114.0
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          
      # Setup msbuild
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1
      
      # Download vulkan sdk
      - name: download-vulkan-sdk
        shell: cmd
        run: |
          @echo | curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.1.114.0/windows/VulkanSDK-1.1.114.0-Installer.exe?Human=true
          
      # Install vulkan sdk
      - name: install vulkan sdk
        shell: cmd
        run: |
            VulkanSDK.exe /S
            rm -f VulkanSDK.exe
            
      # Build libs
      - name: build libs
        shell: cmd
        run: |
             @echo | call BuildLibs.bat
            
      # Generate sln
      - name: generate-sln
        shell: cmd
        run: |
          @echo | call GenerateProjectFiles.bat
   
      # Build engine Release
      - name: build-sln-Release
        shell: cmd
        run: |
          @echo | msbuild -m Engine.sln /t:build /p:Configuration="Release" /p:Platform="x64" /p:BuildInParallel=true
          
      # Prepare package Release
      - name: prepare-package-Release
        shell: cmd
        run: |
          xcopy "Ressources\*" "Release\" /E /H
          copy "Sources\Engine\Core\Engine\Binaries\Engine.exe" "Release\"
          
      # Build engine Debug
      - name: build-sln-Debug
        shell: cmd
        run: |
          @echo | msbuild -m Engine.sln /t:build /p:Configuration="Debug" /p:Platform="x64" /p:BuildInParallel=true
          
      # Prepare package Debug
      - name: prepare-package-Debug
        shell: cmd
        run: |
          xcopy "Ressources\*" "Debug\" /E /H
          copy "Sources\Engine\Core\Engine\Binaries\Engine.exe" "Debug\"
     
      # Zip package
      - name: Zip package
        shell: cmd
        run: |
          powershell Compress-Archive -Path Release\* -DestinationPath Engine-Release.zip
          powershell Compress-Archive -Path Debug\* -DestinationPath Engine-Debug.zip
    
      # Release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "Windows"
          prerelease: true
          title: "Windows build"
          files: |
            Engine-Debug.zip
            Engine-Release.zip
